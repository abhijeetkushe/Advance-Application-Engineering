<?xml version="1.0" encoding="utf-8"?>

<views2:vTask xmlns:fx="http://ns.adobe.com/mxml/2009"
			  xmlns:s="library://ns.adobe.com/flex/spark"
			  xmlns:mx="library://ns.adobe.com/flex/mx"
			  xmlns:views2="views.*"
			  xmlns:charts="mx.charts.*"
			  xmlns:series="mx.charts.series.*"
			  xmlns:chartClasses="mx.charts.chartClasses.*"
			  xmlns:components="components.*"
			  chromeColor="#D2D2E0" contentBackgroundColor="#F6F0F0"
			  creationComplete="vtask1_creationCompleteHandler(event)" title="ManroeChart" actionBarVisible="false">
	
	<fx:Script>
		<![CDATA[
			import com.labtest.model.MonroeCurve;
			import com.labtest.model.MonroeFactory;
			
			import flash.net.navigateToURL;
			
			import flashx.textLayout.formats.Float;
			
			import mx.collections.ArrayCollection;
			import mx.collections.Sort;
			import mx.collections.SortField;
			import mx.controls.Alert;
			import mx.controls.Image;
			import mx.events.FlexEvent;
			import mx.rpc.events.ResultEvent;
			
			//[Bindable]
			private var obj1:Object=new Object();
			
			private var ly1:int;
			private var eos1:int;
			private var baso1:int;
			private var meta1:int;
			private var segs1:int;
			private var bands1:int;
			
			[Bindable]
			private var anc:Number;
			
			[Bindable]
			private var itrat:Number;
			private var wbc:int;
			
			
			[Bindable]
			private var testList:XMLList = new XMLList();
			
			
			[Bindable]
			public var expenses:ArrayCollection;
			
			[Bindable]
			private var dateList:ArrayCollection = new ArrayCollection( 
				['12/31/2010','01/01/2011']);
			
			
			
			[Bindable]
			public var ncCountList:ArrayCollection = new ArrayCollection([1800,3600,5400,7200,9000,10800,12600,14400,16200,18000]);
			/* 				{ncCount:0},
			{ncCount:1800},
			{ncCount:3600},
			{ncCount:5400},
			{ncCount:7200},
			{ncCount:9000},
			{ncCount:10800},
			{ncCount:12600},
			{ncCount:14400},
			{ncCount:16200},
			{ncCount:18000}]); */
			
			
			[Bindable]
			private var timeList:ArrayCollection = new ArrayCollection([6,12,18,24,30,36,42,48,54,60]); 
			//[{time:0},{time:6},{time:12},{time:18},{time:24},{time:30},{time:36},{time:42},{time:48},{time:54},{time:60}]);
			
			[Bindable]
			private var orderList:XMLList = new XMLList();
			
			[Bindable]
			private var obj:Object=new Object();
			
			[Bindable]
			private var previousStartingIndex:int=0;
			
		
			
			[Bindable]
			private var normalList:ArrayCollection=new ArrayCollection();
			[Bindable]
			private var dangerList:ArrayCollection=new ArrayCollection();
			
			
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				this.navigator.popView();
				// TODO Auto-generated method stub
			}
			
			protected function vtask1_creationCompleteHandler(event:FlexEvent):void
			{
 				expenses = new ArrayCollection([
					{Month:"Graph",ly:42,eos:1,baso:4, mono:3, segs:35, bands:15},
					{Month:"Graph",ly:42,eos:1,baso:4, mono:3, segs:35, bands:15}
				]); 
				// TODO Auto-generated method stub
				
				/* if(inputVariables!=null )
				{	
					testList=inputVariables.testList.test;
					
				
					if(testList!=null && testList.length()>0)
					{
						for each(var test:Object in testList)
						{
						if(test.name=="CBC"){
							obj=test;
							for each(var object:Object in obj.measurementList.measurement)
							{
								if(object.deviceType=='WBC'){
									wbc=parseInt(object.measurementValue);
								}if(object.deviceType=='SEGMENT'){
									segs1=parseInt(object.measurementValue);
								}else if(object.deviceType=='BANDS'){
									bands1=parseInt(object.measurementValue);
								}else if(object.deviceType=='METAMYELOCYTES'){
									meta1=parseInt(object.measurementValue);									
								}
								else if(object.deviceType=='LYMPHS'){
									ly1=parseInt(object.measurementValue);
								}
								else if(object.deviceType=='EOS'){
									eos1=parseInt(object.measurementValue);									
								}else if(object.deviceType=='BASOS'){
									baso1=parseInt(object.measurementValue);
								}
							}
							
							anc=((wbc)*(bands1+segs1+meta1)/100.0);
							itrat=((meta1+bands1)/100.0);
							expenses = new ArrayCollection([
								{Month:"Graph",ly:ly1,eos:eos1,baso:baso1, mono:meta1, segs:segs1, bands:bands1},
								{Month:"Graph",ly:ly1,eos:eos1,baso:baso1, mono:meta1, segs:segs1, bands:bands1}
							]);
						}	
						}
					}
			
				} */
				
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<mx:SolidColor id="danger" color="red" alpha="1.0" />
		<mx:SolidColor id="normal" color="green" alpha="1.0" />
		<!-- Place non-visual elements (e.g., services, value objects) here -->
		
		<mx:SolidColor id="lymphFill" color="#63d3de" alpha="1.0" />
		<mx:SolidColor id="eosFill" color="#dc3d77" alpha="1.0"/>
		<mx:SolidColor id="basoFill" color="#6063e8" alpha="1.0"/>
		<mx:SolidColor id="monoFill" color="#edf951" alpha="1.0"/>
		<mx:SolidColor id="segsFill" color="#e9adf7" alpha="1.0"/>
		<mx:SolidColor id="bandsFill" color="#e54bc5" alpha="1.0"/>	
		
		
	</fx:Declarations>
	<s:Rect width="480" height="100%">
		<s:fill>
			<s:SolidColor color="#000000"/>
		</s:fill>
	</s:Rect>
	<s:Rect x="10" y="11" width="459" height="729" radiusX="20" radiusY="20">
		<s:fill>
			<s:SolidColor color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	<s:Rect x="11" y="10" width="459" height="613" radiusX="20" radiusY="20">
		<s:fill>
			<s:SolidColor color="#FFFFFF"/>
		</s:fill>
	</s:Rect>
	<s:VGroup id="view" width="435" height="587" horizontalCenter="-5" verticalCenter="-7" >
		<mx:Canvas width="434" height="585">
			<charts:AreaChart id="myChart"
							  dataProvider="{expenses}" 
							  showDataTips="true" 
							  type="stacked"
							  width="194" x="49" y="46" height="448">
				<charts:horizontalAxis>
					<charts:CategoryAxis 
						dataProvider="{expenses}" 
						categoryField="Graph"
						/>
				</charts:horizontalAxis>
				<charts:series>
					<series:AreaSeries 
						yField="ly" 
						displayName="ly"									
						areaFill="{lymphFill}"
						/>
					<series:AreaSeries 
						yField="eos" 
						displayName="eos"
						areaFill="{eosFill}"
						/>
					<series:AreaSeries 
						yField="baso" 
						displayName="baso"
						areaFill="{basoFill}"
						/>
					<series:AreaSeries 
						yField="mono" 
						displayName="mono"
						areaFill="{monoFill}"
						/>
					<series:AreaSeries 
						yField="segs" 
						displayName="segs"
						areaFill="{segsFill}"
						/>
					<series:AreaSeries 
						yField="bands" 
						displayName="bands"
						areaFill="{bandsFill}"
						/>
					
				</charts:series>
			</charts:AreaChart>
			<s:Label x="49" y="22" color="#35363B" text="Test Tube Blood Count Indicator"/>
			<components:BackButton x="49" y="515" click="nextPageHandler('medicalreport');"/>
			<s:Label x="269" y="98" color="#35363B" text="ANC Count:"/>
			<s:TextInput x="269" y="122" width="145" height="34" text="{anc}"/>
			<s:Label x="269" y="198" color="#35363B" text="I/T Ratio:" />
			<s:TextInput x="269" y="222" width="145" height="34" text="{itrat}"/>
		</mx:Canvas>
		
		
		
	</s:VGroup>
</views2:vTask>
